/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package babbonatale;

import java.io.*;
import java.util.*;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Gruppo 01
 */
public class GUI extends javax.swing.JFrame {

    private Map<Persona, Prodotto> m;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonNew = new javax.swing.JButton();
        jButtonLoad = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldProd = new javax.swing.JTextField();
        jTextFieldSurname = new javax.swing.JTextField();
        jTextFieldPrice = new javax.swing.JTextField();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaShow = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Santa Claus gifts");

        jButtonNew.setText("Nuovo");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });

        jButtonLoad.setText("Carica da file");
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jButtonSave.setText("Salva su file");
        jButtonSave.setEnabled(false);
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonNew, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonNew)
                    .addComponent(jButtonLoad)
                    .addComponent(jButtonSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Nome");

        jLabel2.setText("Cognome");

        jLabel3.setText("Prodotto");

        jLabel4.setText("Prezzo");

        jTextFieldName.setEnabled(false);

        jTextFieldProd.setEnabled(false);

        jTextFieldSurname.setEnabled(false);

        jTextFieldPrice.setEnabled(false);

        jButtonAdd.setText("Aggiungi Regalo");
        jButtonAdd.setEnabled(false);
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Rimuovi Regalo");
        jButtonRemove.setEnabled(false);
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldSurname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                    .addComponent(jTextFieldProd, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPrice))
                                .addGap(45, 45, 45))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemove))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonRemove))
                .addContainerGap())
        );

        jTextAreaShow.setEditable(false);
        jTextAreaShow.setColumns(20);
        jTextAreaShow.setRows(5);
        jTextAreaShow.setToolTipText("");
        jTextAreaShow.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gifts list", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jTextAreaShow.setEnabled(false);
        jScrollPane1.setViewportView(jTextAreaShow);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Questa funzione restituisce vero se le stringhe x, y, z ed d sono vuote 
     * e se la stringa d rappresenta un double positivo.
     * 
     * rappresenta il nome del campo persona passato come parametro
     * rappresenta il cognome del campo persona passato come parametro
     * rappresenta il nome del campo prodotto passato come parametro
     * rappresenta il prezzo del campo prodotto passato come parametro
     * restituisce true se le stringhe sono significative, false altrimenti.
     */
    private boolean controllo(String x, String y, String z, String d) {
        boolean controllo = true;
        double convert;
        if (x.isEmpty() || y.isEmpty() || z.isEmpty() || d.isEmpty()) {
            controllo = false;
        } else {
            try {
                convert = Double.parseDouble(d);
                if (convert >= 0) {
                    controllo = true;
                } else {
                    controllo = false;
                }
            } catch (NumberFormatException ex) {
                controllo = false;
            }
        }
        return controllo;
    }
    /**
     * Questa funzione stampa i campi cognome e nome separati da un caratteri di
     * tabulazione e in ordine alfabetico prima su cognome e poi sul nome, 
     * successivamente stampa i campi nome e prezzo del prodotto separati da 
     * carattere di tabulazione.
     * 
     * @return l'intera stringa tabulata. 
     */
    private String stampaMap(){
        String str = "";
        Persona pers = null;
        Prodotto prod = null;
        Iterator<Persona> it = m.keySet().iterator();
        while(it.hasNext()){
            pers = it.next();
            prod = m.get(pers);
            str += pers.getCognome() + "\t" + pers.getNome() + "\t" + prod.getNome() + "\t" + prod.getPrezzo() + "\n";
        }
        return str;
    }
    
    /**
     * Questo metodo oltre a creare un nuovo insieme abilita anche 
     * tutte le funzioni dell'interfaccia.
     * 
     */
    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                m = new TreeMap<>();
                jButtonNew.setEnabled(false);
                jButtonLoad.setEnabled(false);
                jButtonSave.setEnabled(true);
                jButtonAdd.setEnabled(true);
                jButtonRemove.setEnabled(true);

                jTextFieldName.setEnabled(true);
                jTextFieldSurname.setEnabled(true);
                jTextFieldProd.setEnabled(true);
                jTextFieldPrice.setEnabled(true);
                jTextAreaShow.setEnabled(true);
            }
        });


    }//GEN-LAST:event_jButtonNewActionPerformed

    /**
     * Questo metodo carica dal file di nome "regali.dat" tutte le informazioni 
     * relative alle persone (nome,cognome) e ai prodotto (nome,prezzo).
     *  
     */
    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Prodotto prod = null;
                Persona pers = null;
                String str = "";
                ObjectInputStream file = null;
                m = new TreeMap<>();
                int num;
                try {
                    file = new ObjectInputStream(new BufferedInputStream(new FileInputStream("regali.dat")));
                    num = file.readInt();
                    for (int i = 0; i < num; i++) {
                        try {
                            pers = (Persona) file.readObject();
                            prod = (Prodotto) file.readObject();
                            m.put(pers, prod);
                        } catch (ClassNotFoundException ex) {
                            JOptionPane.showMessageDialog(null, "Dati incompatibili", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                    jTextAreaShow.setEnabled(true);
                    jTextAreaShow.setText(stampaMap());
                    jButtonNew.setEnabled(false);
                    jButtonLoad.setEnabled(false);
                    jButtonSave.setEnabled(true);
                    jButtonAdd.setEnabled(true);
                    jButtonRemove.setEnabled(true);

                    jTextFieldName.setEnabled(true);
                    jTextFieldSurname.setEnabled(true);
                    jTextFieldProd.setEnabled(true);
                    jTextFieldPrice.setEnabled(true);
                    jTextAreaShow.setEnabled(true);
                    JOptionPane.showMessageDialog(null, "Caricamento effettuato correttamente!", "Info", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Errore I/O", "Attenzione", JOptionPane.WARNING_MESSAGE);
                } finally {
                    if (file != null) {
                        try {
                            file.close();
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "Errore nella chiusura del file", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        });



    }//GEN-LAST:event_jButtonLoadActionPerformed

    /**
     * Questo metodo salva sul file di nome "regali.dat" tutti gli elementi
     * presenti nell'insieme dei doni.
     * 
     */
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Prodotto prod = null;
                Persona pers = null;
                ObjectOutputStream file = null;
                int num = m.size();
                try {
                    file = new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream("regali.dat")));
                    file.writeInt(num);
                    Iterator<Persona> it = m.keySet().iterator();
                    while (it.hasNext()) {
                        pers = it.next();
                        prod = m.get(pers);
                        file.writeObject(pers);
                        file.writeObject(prod);
                    }
                    JOptionPane.showMessageDialog(null, "Salvataggio effettuato correttamente!", "Info", JOptionPane.INFORMATION_MESSAGE);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Errore I/O", "Attenzione", JOptionPane.WARNING_MESSAGE);
                } finally {
                    if (file != null) {
                        try {
                            file.close();
                        } catch (IOException ex) {
                            JOptionPane.showMessageDialog(null, "Errore nella chiusura del file", "Errore", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        });

    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * Questo metodo aggiunge un nuovo elemento alla collezione doni e nel caso
     * in cui ci sia gia inserita una persona nell'insieme, il prodotto viene 
     * aggiornato.
     * 
     */
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                String persn, persc, prodn, prodp;
                double prodpconvert;
                persn = jTextFieldName.getText();
                persc = jTextFieldSurname.getText();
                prodn = jTextFieldProd.getText();
                prodp = jTextFieldPrice.getText();
                if (controllo(persn, persc, prodn, prodp)) {
                    prodpconvert = Double.parseDouble(prodp);
                    m.put(new Persona(persn, persc), new Prodotto(prodn, prodpconvert));
                    JOptionPane.showMessageDialog(null, "Inserimento effettuato correttamente", "Info", JOptionPane.INFORMATION_MESSAGE);
                    jTextFieldName.setText("");
                    jTextFieldSurname.setText("");
                    jTextFieldProd.setText("");
                    jTextFieldPrice.setText("");
                    jTextAreaShow.setText(stampaMap());
                } else {
                    JOptionPane.showMessageDialog(null, "Dati incongruenti", "Errore", JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }//GEN-LAST:event_jButtonAddActionPerformed

    /**
     * Questo metodo rimuove un elemento dalla collezione dei doni.
     *  
     */
    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        SwingUtilities.invokeLater(new Runnable(){

            @Override
            public void run() {
                String nome, cognome;
                Persona p;
                nome = jTextFieldName.getText();
                cognome = jTextFieldSurname.getText();
                if(controllo(nome, cognome, "inutile", "1")){
                    if(m.containsKey(p = new Persona(nome, cognome))){
                        m.remove(p);
                        JOptionPane.showMessageDialog(null, "Rimozione effettuata correttamente!", "Info",JOptionPane.INFORMATION_MESSAGE);
                        jTextAreaShow.setText(stampaMap());
                        jTextFieldName.setText("");
                        jTextFieldSurname.setText("");
                        jTextFieldProd.setText("");
                        jTextFieldPrice.setText("");
                    }else{
                        JOptionPane.showMessageDialog(null, "Persona non trovata!", "Attenzione", JOptionPane.WARNING_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Dati incompleti!", "Errore",JOptionPane.ERROR_MESSAGE);
                }
            }
        
        });
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextAreaShow;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPrice;
    private javax.swing.JTextField jTextFieldProd;
    private javax.swing.JTextField jTextFieldSurname;
    // End of variables declaration//GEN-END:variables
}
