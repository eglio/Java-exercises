/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package calcpolacca;

import java.util.Iterator;
import java.util.concurrent.LinkedBlockingDeque;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author egliocz
 */
public class calc extends javax.swing.JFrame {

    LinkedBlockingDeque<Integer> stack;

    /**
     * Creates new form calc
     */
    public calc() {
        this.stack = new LinkedBlockingDeque<Integer>();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        insb = new javax.swing.JButton();
        remb = new javax.swing.JButton();
        operando = new javax.swing.JTextField();
        plus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        mul = new javax.swing.JButton();
        div = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Postfix Calculator");

        insb.setText("Insert");
        insb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insbActionPerformed(evt);
            }
        });

        remb.setText("remove");
        remb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rembActionPerformed(evt);
            }
        });

        plus.setText("+");
        plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusActionPerformed(evt);
            }
        });

        minus.setText("-");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        mul.setText("X");
        mul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mulActionPerformed(evt);
            }
        });

        div.setText("/");
        div.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divActionPerformed(evt);
            }
        });

        output.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stack", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_TOP));
        jScrollPane1.setViewportView(output);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(plus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minus, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mul, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(div, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(8, 8, 8))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(remb)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(insb, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(operando, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insb)
                    .addComponent(operando, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plus)
                    .addComponent(minus)
                    .addComponent(mul)
                    .addComponent(div))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void divActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divActionPerformed
if(stack.size()<2) JOptionPane.showMessageDialog(this, "Non ci sono abbastanza operandi", "Errore", JOptionPane.ERROR_MESSAGE);
else{
int a = stack.pop();
int b = stack.pop();
if (a!=0){
int c = b/a;
stack.push(c);
SwingUtilities.invokeLater(new Runnable() {

    @Override
    public void run() {output.setText(printStack());}
});}
else {stack.clear();
JOptionPane.showMessageDialog(this, "Divisione per 0 impossibile", "Errore", JOptionPane.ERROR_MESSAGE);
output.setText("");
}

}        // TODO add your handling code here:
    }//GEN-LAST:event_divActionPerformed

    private void insbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insbActionPerformed
        boolean error = false;
        int input = 0;
        try {
            input = Integer.parseInt(operando.getText());
        } catch (NumberFormatException exc) {
            error = true;
            JOptionPane.showMessageDialog(this, "Devi inserire un numero!!!", "ATTENTO!", JOptionPane.ERROR_MESSAGE);
        }
        if (!error) {
            synchronized (stack) {
                stack.push(input);
            }

            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    output.setText(printStack());
                }
                });}
        
    }//GEN-LAST:event_insbActionPerformed

    private void rembActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rembActionPerformed
    Integer n;
        synchronized (stack){
        if(!stack.isEmpty()){
        n = stack.pop();
        output.setText(printStack());}
        else JOptionPane.showMessageDialog(this, "Non ci sono operandi da rimuovere", "Avviso", JOptionPane.WARNING_MESSAGE);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_rembActionPerformed

    private void plusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusActionPerformed
if(stack.size()<2) JOptionPane.showMessageDialog(this, "Non ci sono abbastanza operandi", "Errore", JOptionPane.ERROR_MESSAGE);
else{
int a = stack.pop();
int b = stack.pop();
int c = a+b;
stack.push(c);
SwingUtilities.invokeLater(new Runnable() {

    @Override
    public void run() {output.setText(printStack());}
});

}
        // TODO add your handling code here:
    }//GEN-LAST:event_plusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        if(stack.size()<2) JOptionPane.showMessageDialog(this, "Non ci sono abbastanza operandi", "Errore", JOptionPane.ERROR_MESSAGE);
else{
int a = stack.pop();
int b = stack.pop();
int c = b-a;
stack.push(c);
SwingUtilities.invokeLater(new Runnable() {

    @Override
    public void run() {output.setText(printStack());}
});

}// TODO add your handling code here:
    }//GEN-LAST:event_minusActionPerformed

    private void mulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mulActionPerformed
   if(stack.size()<2) JOptionPane.showMessageDialog(this, "Non ci sono abbastanza operandi", "Errore", JOptionPane.ERROR_MESSAGE);
else{
int a = stack.pop();
int b = stack.pop();
int c = a*b;
stack.push(c);
SwingUtilities.invokeLater(new Runnable() {

    @Override
    public void run() {output.setText(printStack());}
});

}     // TODO add your handling code here:
    }//GEN-LAST:event_mulActionPerformed

    public String printStack() {
        String tmp = "";
        /*Object[] vet;                 //CON ARRAY
        synchronized (stack) {
            vet = stack.toArray();
        }
        for (Object o : vet) {
            Integer elem = (Integer) o;
            tmp = tmp + o.toString() + "\n";
        }*/  
        for (Iterator<Integer> it = stack.descendingIterator(); it.hasNext();) {
            Integer i = it.next();
            tmp=tmp+i+"\n";
            
        }return tmp;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calc().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton div;
    private javax.swing.JButton insb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton minus;
    private javax.swing.JButton mul;
    private javax.swing.JTextField operando;
    private javax.swing.JTextPane output;
    private javax.swing.JButton plus;
    private javax.swing.JButton remb;
    // End of variables declaration//GEN-END:variables
}

